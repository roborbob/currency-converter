{"version":3,"sources":["assets/beach-waves.mp4","components/config.js","components/listItem.js","components/spinner.js","components/calculator.js","reducers/RateReducer.js","components/styles.js","components/select.js","containers/CurrencySelector.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","config","AUD","name","BGN","BRL","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","ListItemStyle","styled","div","flagStyle","width","height","ListItem","React","forwardRef","props","ref","onClick","clicked","style","svg","countryCode","code","slice","className","SpinnerStyle","Spinner","CurrencyCalculator","CurrencyCalcContainer","rate","symbol","right","reducer","state","action","type","rotate","buying","selling","flag","currency","currencyCode","toggleLeft","toggleRight","searchRight","searchLeft","Object","values","val","toString","match","left","Number","SwapButton","SelectWrapper","SelectContainer","InputContainer","DropDownStyles","css","toggle","SearchInput","DropDownContainer","SearchBox","input","SelectedCurrency","Select","initialState","sessionStorage","getItem","useReducer","dispatch","useState","rateData","list","setList","useEffect","a","b","axios","result","data","rates","fetchData","leftList","filter","i","toUpperCase","rightList","value","placeholder","onChange","e","target","transform","length","map","key","Math","random","undefined","currencyToSymbolMap","CurrencySelector","setData","console","log","newList","entries","sort","listData","push","SelectorWrapper","initialRate","p","App","Container","autoPlay","src","Waves","mute","loop","main","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a4f21d33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beach-waves.2935e8f9.mp4\";","\nexport const config = {\n    AUD: {\n        name:`Australian Dollar`,\n    },\n    BGN: {\n        name:`Bulgarian Lev`,\n    },\n    BRL: {\n        name:`Brazilian Real`,\n    },\n    CAD: {\n        name:`Canadian Dollar`,\n    },\n    CHF: {\n        name:`Swiss Franc`,\n    },\n    CNY: {\n        name:`Chinese Yen`,\n    },\n    CZK: {\n        name:`Czech Koruna`,\n    },\n    DKK: {\n        name:`Danish Krone`,\n    },\n    EUR: {\n        name:`Euro`,\n    },\n    GBP: {\n        name: `British Pound`,\n    },\n    HKD: {\n        name:`Hong Kong Dollar`,\n    },\n    HRK: {\n        name:`Croatian Kuna`,\n    },\n    HUF:{\n        name:`Hungarian Forint`,\n    },\n    IDR: {\n        name:`Indonesian Rupiah`,\n    },\n    ILS: {\n        name:`Israeli Shekel`,\n    },\n    INR: {\n        name:`Indian Rupee`,\n    },\n    ISK: {\n        name:`Icelandic Krona`,\n    },\n    JPY: {\n        name:`Japanese Yen`,\n    },\n    KRW: {\n        name:`South Korean Won`,\n    },\n    MXN: {\n        name:`Mexican Peso`,\n    },\n    MYR: {\n        name:`Malaysian Ringgit`,\n    },\n    NOK: {\n        name:`Norwegian Krone`,\n    },\n    NZD: {\n        name:`New Zealand Dollar`,\n    },\n    PHP: {\n        name:`Philippene Peso`,\n    },\n    PLN: {\n        name:`Polish Zloty`,\n    },\n    RON: {\n        name:`Romanian Leu`,\n    },\n    RUB: {\n        name:`Russian Ruble`,\n    },\n    SEK: {\n        name:`Swedish Krona`,\n    },\n    SGD: {\n        name:`Singapore Dollar`,\n    },\n    THB: {\n        name:`Thai Bhat`,\n    },\n    TRY: {\n        name:`Turkish Lira`,\n    },\n    USD: {\n        name:`United States Dollar`,\n    },\n    ZAR: {\n        name:`South African Rand`,\n    },\n\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ReactCountryFlag from 'react-country-flag';\nimport {config} from './config';\n\nconst ListItemStyle = styled.div`\n    position: relative;\n    border-top: 1px solid silver;\n    transition: 0.3s;\n    background: rgba(255,255,255,0.8);\n    box-sizing: border-box;\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: row;\n    width: 270px;\n    height: 60px;\n    padding: 10px;\n    &:hover{\n        background: lightblue;\n        cursor: pointer;\n    }\n    .currency-tags{\n        width: fit-content;\n        padding-left: 20px;\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        justify-content: space-between;\n        p:first-of-type{\n            font-size: 20px;\n            font-weight: bold;\n            line-height: 1;\n            margin: 0;\n        }\n        p{\n            font-family: 'Helvetica Neue';\n            font-size: 14px;\n            font-weight: 300;\n            letter-spacing: 1.2px;\n            line-height: 1;\n            margin: 0;\n        }\n    }\n`\n\nconst flagStyle = {\n    width: `50px`,\n    height: `100%`,\n}\n\nconst ListItem = React.forwardRef((props,ref) => (   \n                <ListItemStyle ref={ref} onClick={props.clicked}>\n                    <ReactCountryFlag style={flagStyle} svg countryCode={props.code.slice(0,2)}/>\n                    <div className='currency-tags'>\n                        <p>{props.code}</p>\n                        <p>{config[props.code].name}</p>\n                    </div>\n                </ListItemStyle>\n                ))          \n\nexport default ListItem;\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SpinnerStyle = styled.div`\nwidth: 270px;\nmargin-top: 15px;\n.lds-roller {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-roller div {\n    animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    transform-origin: 40px 40px;\n  }\n  .lds-roller div:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #fff;\n    margin: -4px 0 0 -4px;\n  }\n  .lds-roller div:nth-child(1) {\n    animation-delay: -0.036s;\n  }\n  .lds-roller div:nth-child(1):after {\n    top: 63px;\n    left: 63px;\n  }\n  .lds-roller div:nth-child(2) {\n    animation-delay: -0.072s;\n  }\n  .lds-roller div:nth-child(2):after {\n    top: 68px;\n    left: 56px;\n  }\n  .lds-roller div:nth-child(3) {\n    animation-delay: -0.108s;\n  }\n  .lds-roller div:nth-child(3):after {\n    top: 71px;\n    left: 48px;\n  }\n  .lds-roller div:nth-child(4) {\n    animation-delay: -0.144s;\n  }\n  .lds-roller div:nth-child(4):after {\n    top: 72px;\n    left: 40px;\n  }\n  .lds-roller div:nth-child(5) {\n    animation-delay: -0.18s;\n  }\n  .lds-roller div:nth-child(5):after {\n    top: 71px;\n    left: 32px;\n  }\n  .lds-roller div:nth-child(6) {\n    animation-delay: -0.216s;\n  }\n  .lds-roller div:nth-child(6):after {\n    top: 68px;\n    left: 24px;\n  }\n  .lds-roller div:nth-child(7) {\n    animation-delay: -0.252s;\n  }\n  .lds-roller div:nth-child(7):after {\n    top: 63px;\n    left: 17px;\n  }\n  .lds-roller div:nth-child(8) {\n    animation-delay: -0.288s;\n  }\n  .lds-roller div:nth-child(8):after {\n    top: 56px;\n    left: 12px;\n  }\n  @keyframes lds-roller {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nconst Spinner = () => {\n    return (\n        <SpinnerStyle>\n            <div className=\"lds-roller\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </SpinnerStyle>\n    )\n}\n\nexport default Spinner;","import React from 'react';\nimport styled from 'styled-components';\n\nconst CurrencyCalculator = (props) => {\n    return (\n        <CurrencyCalcContainer>\n            <p>Live Exchange Rate: <mark><span>{props.rate}</span></mark></p>\n            <p>= {props.symbol} {props.right}</p>\n        </CurrencyCalcContainer>\n    )\n}\n\nexport default CurrencyCalculator;\n\nconst CurrencyCalcContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: start;\n    width: 100%;\n    margin-top: 30px;\n    background: rgba(0,0,0,0.3);\n    padding: 40px;\n    border-radius: 5px;\n    p:nth-of-type(1){\n        font-size: 30px;\n        font-weight: 300;\n        color: white;\n        font-style: italic;\n        span{\n            font-style: normal;\n            font-size: 30px;\n            font-weight: bold;\n        }\n    }\n    p:nth-of-type(2){\n        font-style: normal;\n        color: white;\n        font-size: 30px;\n        font-weight: bold;\n    }\n`\n\n","import {config} from '../components/config';\n\nexport const reducer = (state,action) => {\n    switch(action.type) {\n        case 'SWAP' :\n            return ({\n                ...state,\n                rotate: !state.rotate,\n                buying: state.selling,\n                selling: state.buying\n            }) \n        case 'UPDATE_SELLING' : \n            return ({\n                ...state,\n                selling: {flag: action.currency.slice(0,2) , currencyCode: action.currency, currency: config[action.currency].name},\n                toggleLeft: !state.toggleLeft,\n            })\n        case 'UPDATE_BUYING' : \n            return ({\n                ...state,\n                toggleRight: !state.toggleRight,\n                buying: {flag: action.currency.slice(0,2) , currencyCode: action.currency, currency: config[action.currency].name}\n            })\n        case 'TOGGLE_LEFT' :\n            return ({\n                ...state,\n                toggleLeft: !state.toggleLeft,\n                searchRight: ''\n            })\n        case 'TOGGLE_RIGHT' :\n            return ({\n                ...state,\n                toggleRight: !state.toggleRight,\n                searchLeft: ''\n            })\n        case 'UPDATE_RATE' :\n            return ({\n                ...state,\n                rate: Object.values(action.rate)[0]\n            })\n        case 'UPDATE_LEFT_INPUT' :\n            let selling = (action.val*state.rate).toString().match(/(\\d*\\.*\\d{0,2})/m)[0]\n            return ({\n                ...state,\n                left: action.val,\n                right: Number(selling)\n            })\n        case 'UPDATE_RIGHT_INPUT' :\n            let buying = (action.val/state.rate).toString().match(/(\\d*\\.*\\d{0,2})/m)[0]\n            return ({\n                ...state,\n                left: Number(buying),\n                right: action.val\n            })\n        case 'UPDATE_LEFT_SEARCH' :\n            return ({\n                ...state,\n                searchLeft : action.val\n            })\n        case 'UPDATE_RIGHT_SEARCH' :\n            return ({\n                ...state,\n                searchRight : action.val\n            })\n        default:\n            return state\n\n    }\n}","import styled, {css} from 'styled-components';\n\nexport const SwapButton = styled.div`\n   svg {\n        width: 50px;\n        height: 100%;\n        transition: 0.3s;\n    &:hover {\n        color: blue;\n        cursor: pointer;\n    }\n   }\n`\n\nexport const SelectWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const SelectContainer = styled.div`\n    position: relative;\n    box-sizing: border-box;\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: row;\n    width: 270px;\n    height: 60px;\n    border-radius: 5px;\n    border: none;\n    background: white;\n    box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.25);\n    .currency-tags{\n        width: fit-content;\n        padding-left: 20px;\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        p:first-of-type{\n            font-family: 'Helvetica Neue';\n            font-size: 20px;\n            font-weight: bold;\n            margin: 0;\n        }\n        p{\n            font-family: 'Helvetica Neue';\n            font-size: 14px;\n            font-weight: 300;\n            letter-spacing: 1.2px;\n        }\n    }\n    svg{\n        position: absolute;\n        align-self: center;\n        width: 30px;\n        right: 15px;\n        transition: 0.3s;\n        &:hover{\n            cursor: pointer;\n            transform: scale(1.2);\n        }\n    }\n`\nexport const InputContainer = styled.div`\n    display: flex;\n    margin-top: 10px;\n    border-radius: 5px;\n    width: 270px;\n    height: 60px;\n    background: white;\n    flex-direction: row;\n    align-items: center;\n    padding: 10px;\n    font-size: 20px;\n    font-weight: 400;\n    font-family: 'Monospace';\n    span {\n        width: 40px;\n        padding-right: 5px;\n    }\n    input { \n        width: 240px;\n        height: 60px;\n        justify-content: space-evenly;\n        border: none;\n        font-size: 20px;\n        font-weight: 400;\n        font-family: 'Monospace';\n    &:focus{\n        outline: none;\n    }\n   }\n`\nexport const DropDownStyles = css`\n    position: absolute;\n    top: 60px;\n    left: 0;\n    width: 270px;\n    overflow: scroll;\n    z-index: 100;\n    background: none;\n    border-radius: 5px;\n    transition: 0.2s;\n    box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.25);\n    max-height: ${props => props.toggle ? `360px` : `0px`};\n`\n\nexport const SearchInput = css`\n    width: 100%;\n    border: none;\n    font-size: 20px;\n    padding: 10px;\n    border-radius: 5px;\n    &:focus {\n        border: none;\n        outline: none;\n    }\n`","import React, {useState, useEffect, useReducer} from 'react';\nimport styled from 'styled-components';\nimport ListItem from './listItem';\nimport axios from 'axios';\nimport {MdSwapHoriz, MdExpandMore} from 'react-icons/md';\nimport ReactCountryFlag from 'react-country-flag';\nimport Spinner from './spinner';\nimport currencyToSymbolMap from 'currency-symbol-map/map'\nimport CurrencyCalculator from './calculator';\nimport {reducer} from '../reducers/RateReducer';\nimport {SelectWrapper,SelectContainer,SwapButton, InputContainer, DropDownStyles, SearchInput} from './styles.js';\n\nconst DropDownContainer = styled.div`${DropDownStyles}`;\nconst SearchBox = styled.input`${SearchInput}`;\nconst flagStyle = {width: `50px`, height: `100%`}\nconst SelectedCurrency = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    padding: 10px;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nfunction Select(props) {\n    const initialState = {\n        rate: sessionStorage.getItem(`EUR`),\n        selling: { flag: 'GB', currencyCode: `GBP`, currency: `British Pounds`},\n        buying: {flag: 'EU',currencyCode: `EUR`, currency: `Euro`},\n        rotate: false,\n        toggleLeft: false,\n        toggleRight: false,\n        left: 1,\n        right: '',\n        right: sessionStorage.getItem(`EUR`),\n        searchLeft: '',\n        searchRight: '',\n    }\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [list, setList ] = useState(props.rateData)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let a = state.selling.currencyCode;\n            let b = state.buying.currencyCode\n            const result = await axios(\n                `https://api.exchangeratesapi.io/latest?base=${a}&symbols=${b}`\n            )\n            dispatch({type: 'UPDATE_RATE', rate: result.data.rates})\n        } \n        fetchData();\n    },[state.selling,state.buying])\n\n    useEffect(() => {\n        dispatch({type: 'UPDATE_LEFT_INPUT', val: state.left})\n    }, [state.rate])\n\n    useEffect(() => {\n       if(state.searchLeft === '' && state.searchRight === ''){\n           setList(props.rateData)\n       } else if(state.searchLeft !== '') {\n           let leftList = props.rateData.filter(i => i.match(state.searchLeft.toUpperCase()) !== null )\n           setList(leftList)\n       } else {\n            let rightList = props.rateData.filter(i => i.match(state.searchRight.toUpperCase()) !== null )\n            setList(rightList)\n       }\n    }, [state.toggleLeft,state.searchLeft, state.toggleRight, state.searchRight, props.rateData]) \n      \n    return (\n         <SelectWrapper>\n            <SelectContainer>\n                {!state.toggleLeft ? \n                    <SelectedCurrency onClick={() => dispatch({type: 'TOGGLE_LEFT'})}>\n                        <ReactCountryFlag style={flagStyle} svg countryCode={state.selling.flag}/>\n                        <div className='currency-tags'>\n                            <p>{state.selling.currencyCode}</p>\n                            <p>{state.selling.currency}</p>\n                        </div>\n                    </SelectedCurrency>\n                 :\n                    <SearchBox type='text' value={state.searchLeft} placeholder='Type to search...' onChange={(e)=> dispatch({type:'UPDATE_LEFT_SEARCH', val: e.target.value})}/> \n                }\n                <MdExpandMore \n                    style={{transform: state.toggleLeft ? `rotate(180deg)` : `rotate(0deg)`, height: `60px`}} \n                    onClick={() => dispatch({type: 'TOGGLE_LEFT'})}\n                /> \n                 <DropDownContainer toggle={state.toggleLeft} height={list.length}>\n                     {list.map( e => (\n                         <ListItem \n                            key={Math.random()}\n                            clicked={() => dispatch({type:`UPDATE_SELLING`, currency: e})}\n                            code={e}\n                         />\n                     ))}\n                </DropDownContainer>                \n            </SelectContainer>\n            <SwapButton>\n                <MdSwapHoriz style={{transform: state.rotate ? `rotate(180deg)` : `rotate(0deg)`}} \n                    onClick={() => dispatch({ type: 'SWAP'})}\n                />\n            </SwapButton>   \n            <SelectContainer>\n                {!state.toggleRight ? \n                    <SelectedCurrency onClick={() => dispatch({type: 'TOGGLE_RIGHT'})}>\n                        <ReactCountryFlag style={flagStyle} className='flag'svg countryCode={state.buying.flag}/>\n                        <div className='currency-tags'>\n                            <p>{state.buying.currencyCode}</p>\n                            <p>{state.buying.currency}</p>\n                        </div>\n                    </SelectedCurrency>\n                    :   \n                    <SearchBox type='text' value={state.searchRight} placeholder='Type to search...' onChange={(e)=> dispatch({type:'UPDATE_RIGHT_SEARCH', val: e.target.value})}/> \n                }\n                <MdExpandMore \n                    style={{transform: state.toggleRight ? `rotate(180deg)` : `rotate(0deg)`, height: `60px`}} \n                    onClick={() => dispatch({type: 'TOGGLE_RIGHT'})}\n                    />\n                <DropDownContainer toggle={state.toggleRight} height={list}>\n                    {list.map( e => (\n                        <ListItem \n                            key={Math.random()*10}\n                            clicked={() => dispatch({type:`UPDATE_BUYING`, currency: e})}\n                            code={e}\n                        />\n                    ))}\n                </DropDownContainer>\n            </SelectContainer>\n            {state.rate === undefined ? <><Spinner/><Spinner/></> : \n                <>\n                <InputContainer>\n                   <span>{currencyToSymbolMap[state.selling.currencyCode]}</span>\n                   <input  type=\"text\"  value={state.left} onChange={(e) => dispatch({type: 'UPDATE_LEFT_INPUT', val: e.target.value})}/>\n                </InputContainer>\n                <InputContainer>\n                   <span>{currencyToSymbolMap[state.buying.currencyCode]}</span>\n                   <input  type=\"text\"  value={state.right} onChange={(e) => dispatch({type: 'UPDATE_RIGHT_INPUT', val: e.target.value})}/>\n                </InputContainer>\n                </>\n            }\n            <CurrencyCalculator symbol={currencyToSymbolMap[state.buying.currencyCode]} rate={state.rate} right={state.right}/>\n        </SelectWrapper>\n    )\n}\n\nexport default Select;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Select from '../components/select';\n\nexport default function CurrencySelector(){\n    const [data, setData] = useState('')\n\n    useEffect(() => {\n            console.log('calling api')\n            const fetchData = async () => {\n                const result = await axios(\n                    'https://api.exchangeratesapi.io/latest?base=GBP'\n                ) \n                setData(result.data.rates)\n            } \n            fetchData();\n    }, []);\n\n\n    let newList = Object.entries(data).sort();\n    let listData = []\n    for(const [i,e] of newList){\n        listData.push(i)\n    }\n  \n    return (\n        <SelectorWrapper>\n            <Select  rateData={listData} initialRate={data['EUR']}/>       \n        </SelectorWrapper>\n\n    )\n}\n\nconst SelectorWrapper = styled.div`\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    width: 650px;\n    margin: 200px auto 0px auto;\n`\nconst Instructions = styled.p`\n    font-family: 'Helvetica Neue';\n    font-size: 25px;\n    font-weight: 400;\n    text-align: left;\n    margin-bottom: 20px;\n    border-radius: 5px;\n    color: white;\n    background: rgba(0,0,0,0.3);\n    padding: 40px;\n`","import React, {useRef} from 'react';\nimport CurrencySelector from './containers/CurrencySelector';\nimport Waves from './assets/beach-waves.mp4';\nimport styled from 'styled-components';\nimport './App.scss';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n      <video autoPlay type='video/mp4' src={Waves} mute=\"true\" loop/>\n        <h1>Currency Converter v1.0</h1>\n        <CurrencySelector/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.main`\n  display: block;\n  width: 650px;\n  margin: auto;\n  padding: 0;\n  text-align: center;\n  video {\n    z-index: -1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: auto;\n    height: auto;\n  }\n  h1 {\n    wdith: 100%;\n    color: black;\n    font-family: 'Helvetica Neue';\n    font-weight: 400;\n    letter-spacing: 1.2px;\n  }\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}